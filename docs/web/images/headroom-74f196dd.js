import{T as s,_ as r}from"./MyReward.vue_vue_type_script_setup_true_lang-df11eaf3.js";import{d as n,c,a as e,b as d,e as o,w as a,g as l,t as m,F as u,f as p,o as h}from"./index-15cb1481.js";const v={class:"intro mdui-typo"},b={class:"intro-module"},f={class:"chapter"},g={class:"mdui-typo"},k=n({__name:"headroom",setup(S){return(y,t)=>{const i=p("router-link");return h(),c(u,null,[e(s),t[17]||(t[17]=d("h1",{class:"title mdui-text-color-theme"},"Headroom 插件",-1)),d("div",v,[t[10]||(t[10]=d("p",null," Headroom 插件可以在页面滚动时做出响应，例如在页面向下滚动时，应用栏消失；页面向上滚动时，应用栏出现。 ",-1)),d("p",null,[t[2]||(t[2]=o(" 前面介绍的在滚动时 ")),e(i,{to:"/docs/appbar#hide"},{default:a(()=>t[0]||(t[0]=[o("自动隐藏应用栏")])),_:1}),t[3]||(t[3]=o(" 和 ")),e(i,{to:"/docs/bottom_nav#auto-hide"},{default:a(()=>t[1]||(t[1]=[o("自动隐藏底部导航栏")])),_:1}),t[4]||(t[4]=o(" 的功能就是使用该插件实现的。 "))]),d("div",b,[t[9]||(t[9]=d("h3",null,"调用方式",-1)),d("ol",null,[d("li",null,[t[6]||(t[6]=o(" 通过自定义属性调用（若组件是动态生成的，则需要调用 ")),e(i,{to:"/docs/global#mutation"},{default:a(()=>t[5]||(t[5]=[d("code",null,"mdui.mutation()",-1)])),_:1}),t[7]||(t[7]=o(" 进行初始化） "))]),t[8]||(t[8]=d("li",null,"通过 JavaScript 调用",-1))])])]),e(r,{class:"first-screen"}),t[18]||(t[18]=l('<nav class="toc mdui-text-color-theme"><ul><li><a href="#call">调用方式</a><ul><li><a href="#attr">通过自定义属性调用</a></li><li><a href="#js">通过 JavaScript 调用</a></li><li><a href="#option">参数</a></li><li><a href="#method">方法</a></li><li><a href="#event">事件</a></li></ul></li></ul></nav>',1)),d("div",f,[d("div",g,[t[14]||(t[14]=l('<h2 class="chapter-title chapter-title-first mdui-text-color-theme"> 调用方式 <a class="anchor" id="call"></a></h2><h4 class="article-title"> 通过自定义属性调用 <a class="anchor" id="attr"></a></h4><p> 使用该方式无需编写 JavaScript 代码。只需在元素上添加 <code>mdui-headroom=&quot;<a href="#option">options</a>&quot;</code> 属性即可激活该插件。 </p>',3)),d("p",null,[t[12]||(t[12]=o(" 若组件是动态生成的，则需要调用 ")),e(i,{to:"/docs/global#mutation"},{default:a(()=>t[11]||(t[11]=[d("code",null,"mdui.mutation()",-1)])),_:1}),t[13]||(t[13]=o(" 进行初始化。 "))]),t[15]||(t[15]=d("pre",null,[d("code",{class:"language-html"},m('<div mdui-headroom style="position: fixed; top: 0; left: 0; right: 0;"></div>'))],-1))]),t[16]||(t[16]=l(`<a href="./headroom/demo1" target="_blank" class="mdui-btn mdui-color-theme-accent">demo</a><div class="mdui-typo"><h4 class="article-title"> 通过 JavaScript 调用 <a class="anchor" id="js"></a></h4><p>实例化插件：</p><pre><code class="language-js">// selector 为 CSS 选择器或 DOM 元素
// options 为插件的参数，见下面的参数列表
var inst = new mdui.Headroom(selector, options);</code></pre></div><a href="./headroom/demo2" target="_blank" class="mdui-btn mdui-color-theme-accent">demo</a><div class="mdui-typo"><h4 class="article-title">参数 <a class="anchor" id="option"></a></h4><div class="mdui-table-fluid"><table class="mdui-table"><thead><tr><th>参数名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>tolerance</code></td><td><code>int</code><code>Object</code></td><td><code>5</code></td><td><p>滚动多少距离后触发隐藏元素。</p><p>若参数值为数字，表示向上和向下滚动触发距离相同。</p><p> 也可以是一个对象，分别指定向上和向下滚动的触发距离。如 <code>{ down: 10, up: 5 }</code></p></td></tr><tr><td><code>offset</code></td><td><code>int</code></td><td><code>0</code></td><td>在离页面顶部多少距离后滚动时开始隐藏元素。</td></tr><tr><td><code>initialClass</code></td><td><code>string</code></td><td><code>mdui-headroom</code></td><td>初始化插件后在元素上添加的 CSS 类。</td></tr><tr><td><code>pinnedClass</code></td><td><code>string</code></td><td><code>mdui-headroom-pinned-top</code></td><td>固定住元素后添加的 CSS 类。</td></tr><tr><td><code>unpinnedClass</code></td><td><code>string</code></td><td><code>mdui-headroom-unpinned-top</code></td><td>取消固定后添加的 CSS 类。</td></tr></tbody></table></div></div><div class="mdui-typo"><h4 class="article-title">方法 <a class="anchor" id="method"></a></h4><div class="mdui-table-fluid"><table class="mdui-table"><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td><code>pin()</code></td><td>使元素固定住。</td></tr><tr><td><code>unpin()</code></td><td>使元素隐藏。</td></tr><tr><td><code>enable()</code></td><td>启用 headroom 插件。</td></tr><tr><td><code>disable()</code></td><td>禁用 headroom 插件。</td></tr><tr><td><code>getState()</code></td><td> 获取当前元素的状态。共包含四种状态（<code>pinning</code>、<code>pinned</code>、<code>unpinning</code>、<code>unpinned</code>）。 </td></tr></tbody></table></div></div><div class="mdui-typo"><h4 class="article-title">事件 <a class="anchor" id="event"></a></h4><div class="mdui-table-fluid"><table class="mdui-table"><thead><tr><th>事件</th><th>描述</th><th>参数</th></tr></thead><tbody><tr><td><code>pin.mdui.headroom</code></td><td>开始固定时触发。</td><td rowspan="4"><code>event._detail.inst</code>：实例</td></tr><tr><td><code>pinned.mdui.headroom</code></td><td>固定结束后触发。</td></tr><tr><td><code>unpin.mdui.headroom</code></td><td>开始隐藏时触发。</td></tr><tr><td><code>unpinned.mdui.headroom</code></td><td>隐藏后触发。</td></tr></tbody></table></div></div>`,6))])],64)}}});export{k as default};
